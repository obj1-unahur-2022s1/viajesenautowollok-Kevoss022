import remiseras.*
import lucia_y_el_cadete__.*
import cooperativa.*

test "clientas precio base" {
	assert.equals(18, ludmila.precioBaseViaje())
	assert.equals(30, anaMaria.precioBaseViaje())
	assert.equals(22, teresa.precioBaseViaje())
}

///////////////////////////////////

test "precio de viaje de roxana 10km" {
	assert.equals(180,roxana.precioViaje(ludmila,10))
	assert.equals(300,roxana.precioViaje(anaMaria,10))
	assert.equals(220,roxana.precioViaje(teresa,10))
}

test "precio de viaje de gabriela 10km" {
	assert.equals(216 ,gabriela.precioViaje(ludmila,10))
	assert.equals(360,gabriela.precioViaje(anaMaria,10))
	assert.equals(264,gabriela.precioViaje(teresa,10))
}

test "precio de viaje de Mariela 10km" {
	assert.equals(180,mariela.precioViaje(ludmila,10))
	assert.equals(300,mariela.precioViaje(anaMaria,10))
	assert.equals(220,mariela.precioViaje(teresa,10))
}

test "precio de viaje de juana 10km" {
	assert.equals(200 ,juana.precioViaje(ludmila,10))
	assert.equals(200 ,juana.precioViaje(anaMaria,10))
	assert.equals(200 ,juana.precioViaje(teresa,10))
}

/////////////////////////////////////////////////////

test "precio de viaje de roxana 2km" {
	assert.equals(36,roxana.precioViaje(ludmila,2))
	assert.equals(60,roxana.precioViaje(anaMaria,2))
	assert.equals(44,roxana.precioViaje(teresa,2))
}

test "precio de viaje de gabriela 2km" {
	assert.equals(43.20,gabriela.precioViaje(ludmila,2))
	assert.equals(72,gabriela.precioViaje(anaMaria,2))
	assert.equals(52.80,gabriela.precioViaje(teresa,2))
}

test "precio de viaje de mariela 2km" {
	assert.equals(50 ,mariela.precioViaje(ludmila,2))
	assert.equals(60,mariela.precioViaje(anaMaria,2))
	assert.equals(50 ,mariela.precioViaje(teresa,2))
}

test "precio de viaje de juana 2km" {
	assert.equals(100 ,juana.precioViaje(ludmila,2))
	assert.equals(100 ,juana.precioViaje(anaMaria,2))
	assert.equals(100 ,juana.precioViaje(teresa,2))
}


///////////////////////////////////////////////////


test "lucia reemplaza a mariela y melina trabaja para ludmila en viaje de 10km" {
	assert.equals(150,melina.precioViajeSiTrabajaPara(mariela, ludmila, 10))
}
	
test "lucia reemplaza a mariela y melina trabaja para ludmila en viaje de 1km" {
	assert.equals(50,melina.precioViajeSiTrabajaPara(mariela, ludmila, 1))
}	
	
test "lucia reemplaza a gabriela y melina trabaja para ludmila en viaje de 10km" {
	assert.equals(180,melina.precioViajeSiTrabajaPara(gabriela, ludmila, 10))
}	
	
test "lucia reemplaza a gabriela y melina trabaja para ludmila en viaje de 1km" {
	assert.equals(18,melina.precioViajeSiTrabajaPara(gabriela, ludmila, 10))
}		
	
	
////////////////////////////////	
	
	
test "asignar remiseras" {
	oficina.asignarRemiseras(roxana, gabriela)
	assert.equals(roxana,oficina.primeraRemisera())
	assert.equals(gabriela,oficina.segundaRemisera())
}	
	
test "cambiar primer remisera" {
	oficina.cambiarPrimerRemiseraPor(gabriela)
	assert.equals(gabriela,oficina.primeraRemisera())
}	

test "cambiar segunda remisera" {
	oficina.cambiarSegundoRemiseraPor(roxana)
	assert.equals(roxana,oficina.segundaRemisera())
}	

//test "intercambiar remiseras" {
//	oficina.asignarRemiseras(roxana, gabriela)
//	oficina.intercambiarRemiseras()
//	assert.equals(roxana,oficina.segundaRemisera())
//	assert.equals(gabriela,oficina.primeraRemisera())
//}
	
test "corresponde el viaje a la segunda remisera" {
	oficina.asignarRemiseras(gabriela, roxana)
	assert.equals(roxana, oficina.remiseraElegidaParaViaje(ludmila,10))
}
	
